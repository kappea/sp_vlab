# -*- coding: utf-8 -*-
# Generated by Django 1.11.10 on 2018-08-20 09:45
from __future__ import unicode_literals

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('evenementen', '0008_pagecontent'),
        ('schedule', '0003_auto_20180615_1748'),
    ]

    operations = [
        migrations.CreateModel(
            name='BlokSelectie',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='EvenementDeelnemer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('invite_email', models.CharField(max_length=200)),
                ('naam', models.CharField(max_length=200)),
                ('token', models.CharField(db_index=True, max_length=40)),
                ('evenement', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='evenementen.Evenement')),
            ],
            options={
                'ordering': ['evenement', 'naam'],
            },
        ),
        migrations.CreateModel(
            name='PageContent',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('naam', models.SlugField(help_text='Voor de hoofdpagina moet dit "dashboard" zijn', unique=True)),
                ('published', models.BooleanField(default=True, help_text='Aanvinken als pagina getoond moet worden', verbose_name='Published')),
                ('titel', models.CharField(max_length=64)),
                ('intro', models.CharField(blank=True, help_text='Maximaal 2000 characters', max_length=2000)),
                ('content', models.TextField(help_text='De pagina inhoud', verbose_name='Content')),
                ('avg_tekst1', models.CharField(blank=True, help_text='Beschrijf hier bondig, eenvoudig en toegankelijk het primaire doel waarvoor u de persoonsgegevens vraagt, of de gegevens gedeeld worden en hoe lang ze bewaard worden.\nBijvoorbeeld:\nWij gebruiken uw gegevens om uw vraag te beantwoorden, waarna ze vernietigd worden. Uw informatie wordt niet met derden gedeeld.', max_length=1000, verbose_name='Informatie over de verwerking van uw persoonsgegevens')),
                ('avg_tekst2', models.CharField(blank=True, help_text='De doeleinden en rechtsgrond van de verwerking, en als u zich beroept op een gerechtvaardigd belang: op welk belang u zich beroept.\nIndien nodig: Of en waarom de betrokkene verplicht is de persoonsgegevens te verstrekken en wat de gevolgen zijn als de gegevens niet worden verstrekt.\nBijvoorbeeld:\nWij gebruiken uw gegevens, met uw toestemming, omdat wij anders niet in staat zijn om uw vraag te beantwoorden.', max_length=1000, verbose_name='Waarom worden deze gegevens gevraagd?')),
                ('avg_tekst3', models.CharField(blank=True, help_text='Wat doet u met de gegevens en met wie worden ze gedeeld. Noem de ontvangers van de persoonsgegevens en, indien van toepassing, of u van plan bent de persoonsgegevens door te geven buiten de EU of een internationale organisatie en op welke juridische grond.\nBijvoorbeeld:\nWij gebruiken uw gegevens om uw vraag te beantwoorden. Uw vraag wordt door onze eigen medewerkers beantwoord. Uw gegevens worden niet met derden gedeeld.', max_length=1000, verbose_name='Op welke manier worden uw gegevens verwerkt?')),
                ('avg_tekst4', models.CharField(blank=True, help_text='Laat hier weten wanneer de informatie wordt vernietigd. Houd hierbij rekening met wettelijke bewaartermijnen en de selectielijsten van uw organisatie.\nBijvoorbeeld:\nZodra wij uw vraag hebben beantwoord worden uw gegevens uit onze systemen verwijderd.', max_length=1000, verbose_name='Hoelang bewaren we uw gegevens?')),
            ],
        ),
        migrations.CreateModel(
            name='ProgrammaBlok',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.TextField()),
                ('help_text', models.TextField(blank=True, null=True)),
                ('order', models.IntegerField()),
                ('required', models.BooleanField()),
                ('evenement', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='programmablokken', to='evenementen.Evenement')),
            ],
        ),
        migrations.CreateModel(
            name='ProgrammaBlokOptie',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('order', models.IntegerField()),
                ('maxaantal', models.IntegerField(blank=True, null=True)),
                ('presentatie', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='schedule.Presentation')),
                ('programmablok', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='progkeuze.ProgrammaBlok')),
            ],
        ),
        migrations.CreateModel(
            name='ProgrammaKeuze',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('akkoordverklaring', models.BooleanField(default=False)),
                ('evenement', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='evenementen.Evenement')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='progkeuze.EvenementDeelnemer')),
            ],
            options={
                'verbose_name': 'programmakeuze',
                'verbose_name_plural': 'programmakeuzes',
            },
        ),
        migrations.AddField(
            model_name='blokselectie',
            name='question',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='answers', to='progkeuze.ProgrammaBlok'),
        ),
        migrations.AddField(
            model_name='blokselectie',
            name='response',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='answers', to='progkeuze.ProgrammaKeuze'),
        ),
        migrations.AddField(
            model_name='blokselectie',
            name='selectie',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='progkeuze.ProgrammaBlokOptie'),
        ),
        migrations.AlterUniqueTogether(
            name='evenementdeelnemer',
            unique_together=set([('evenement', 'invite_email')]),
        ),
    ]
